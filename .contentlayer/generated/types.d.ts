// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Portfolio = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Portfolio'
  title: string
  date: IsoDateTimeString
  slug: string
  image?: Image | undefined
  video?: Video | undefined
  description: string
  enabled: boolean
  orderIndex: number
  preview?: Image | undefined
  overview?: string | undefined
  role?: string[] | undefined
  tools?: string[] | undefined
  media?: string[] | undefined
  dimensions?: string | undefined
  duration?: string | undefined
  team?: string[] | undefined
  textarea?: boolean | undefined
  isPlayground?: boolean | undefined
  /** Markdown file body */
  body: Markdown

}  

/** Nested types */
export type Image = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Image'
  src: string
  width: number
  height: number

}

export type Video = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Video'
  src: string
  width: number
  height: number

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Portfolio
export type DocumentTypeNames = 'Portfolio'

export type NestedTypes = Image | Video
export type NestedTypeNames = 'Image' | 'Video'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPortfolios: Portfolio[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Portfolio: Portfolio
}

export type NestedTypeMap = {
  Image: Image
  Video: Video
}

 