{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, defineNestedType, makeSource } from \"contentlayer/source-files\"\n\nconst Image = defineNestedType(() => ({\n    name: \"Image\",\n    fields: {\n        \"src\": { type: \"string\", required: true },\n        \"width\": { type: \"number\", required: true },\n        \"height\": { type: \"number\", required: true },\n    },\n}))\n\nconst Video = defineNestedType(() => ({\n    name: \"Video\",\n    fields: {\n        \"src\": { type: \"string\", required: true },\n        \"width\": { type: \"number\", required: true },\n        \"height\": { type: \"number\", required: true },\n    },\n}))\n\nexport const Portfolio = defineDocumentType(() => ({\n    name: \"Portfolio\",\n    filePathPattern: `portfolio/*.md`,\n    bodyType: \"markdown\",\n    fields: {\n        title: { type: \"string\", required: true },\n        date: { type: \"date\", required: true },\n        slug: { type: \"string\", required: true },\n        image: { type: \"nested\", of: Image, required: false },\n        video: { type: \"nested\", of: Video, required: false },\n        description: { type: \"string\", required: true },\n        enabled: { type: \"boolean\", required: true },\n        orderIndex: { type: \"number\", required: true },\n\n        preview: { type: \"nested\", of: Image, required: false },\n        overview: { type: \"string\", required: false },\n        role: { type: \"list\", of: { type:\"string\"}, required: false },\n        tools: { type: \"list\", of: { type:\"string\"}, required: false },\n        duration: { type: \"string\", required: false },    \n        team: { type: \"list\", of: { type:\"string\"}, required: false },\n        textarea:{ type: \"boolean\", required: false },\n        isPlayground:{ type: \"boolean\", required: false },\n\n\n    },\n}))\n\n\nexport default makeSource({\n    contentDirPath: \"src/content\",\n    documentTypes: [Portfolio],\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB,kBAAkB;AAEjE,IAAM,QAAQ,iBAAiB,OAAO;AAAA,EAClC,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC/C;AACJ,EAAE;AAEF,IAAM,QAAQ,iBAAiB,OAAO;AAAA,EAClC,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC/C;AACJ,EAAE;AAEK,IAAM,YAAY,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,UAAU;AAAA,EACV,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,IAAI,OAAO,UAAU,MAAM;AAAA,IACpD,OAAO,EAAE,MAAM,UAAU,IAAI,OAAO,UAAU,MAAM;AAAA,IACpD,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,SAAS,EAAE,MAAM,WAAW,UAAU,KAAK;AAAA,IAC3C,YAAY,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAE7C,SAAS,EAAE,MAAM,UAAU,IAAI,OAAO,UAAU,MAAM;AAAA,IACtD,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAK,SAAQ,GAAG,UAAU,MAAM;AAAA,IAC5D,OAAO,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAK,SAAQ,GAAG,UAAU,MAAM;AAAA,IAC7D,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAK,SAAQ,GAAG,UAAU,MAAM;AAAA,IAC5D,UAAS,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,IAC5C,cAAa,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,EAGpD;AACJ,EAAE;AAGF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,SAAS;AAC7B,CAAC;",
  "names": []
}
